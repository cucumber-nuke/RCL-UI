local Library = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")

Library.Settings = {
    MainColor = Color3.fromRGB(40, 40, 40),
    AccentColor = Color3.fromRGB(255, 100, 100),
    TextColor = Color3.fromRGB(255, 255, 255),
    ButtonColor = Color3.fromRGB(60, 60, 60),
    ButtonHoverColor = Color3.fromRGB(70, 70, 70),
    Font = Enum.Font.Gotham,
    TextSize = 14,
}

function Library:CreateWindow(title)
    local Window = Instance.new("ScreenGui")
    Window.Parent = CoreGui

    local MainFrame = Instance.new("Frame")
    MainFrame.Size = UDim2.new(0, 400, 0, 300)
    MainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
    MainFrame.BackgroundColor3 = self.Settings.MainColor
    MainFrame.BorderSizePixel = 0
    MainFrame.Parent = Window

    local TitleBar = Instance.new("Frame")
    TitleBar.Size = UDim2.new(1, 0, 0, 30)
    TitleBar.BackgroundColor3 = self.Settings.AccentColor
    TitleBar.Parent = MainFrame

    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Size = UDim2.new(1, 0, 1, 0)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Text = title
    TitleLabel.TextColor3 = self.Settings.TextColor
    TitleLabel.Font = self.Settings.Font
    TitleLabel.TextSize = self.Settings.TextSize
    TitleLabel.Parent = TitleBar

    local MinimizeButton = Instance.new("TextButton")
    MinimizeButton.Size = UDim2.new(0, 35, 1, 0)
    MinimizeButton.Position = UDim2.new(1, -70, 0, 0)
    MinimizeButton.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
    MinimizeButton.Text = "-"
    MinimizeButton.Parent = TitleBar

    local CloseButton = Instance.new("TextButton")
    CloseButton.Size = UDim2.new(0, 35, 1, 0)
    CloseButton.Position = UDim2.new(1, -35, 0, 0)
    CloseButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    CloseButton.Text = "X"
    CloseButton.Parent = TitleBar

    local ContentHolder = Instance.new("Frame")
    ContentHolder.Name = "ContentHolder"
    ContentHolder.Parent = MainFrame
    ContentHolder.BackgroundTransparency = 1
    ContentHolder.Position = UDim2.new(0, 0, 0, 30)
    ContentHolder.Size = UDim2.new(1, 0, 1, -30)
    ContentHolder.ClipsDescendants = true

    local TabContainer = Instance.new("Frame")
    TabContainer.Name = "TabContainer"
    TabContainer.Parent = ContentHolder
    TabContainer.BackgroundColor3 = self.Settings.MainColor
    TabContainer.Position = UDim2.new(0, 10, 0, 10)
    TabContainer.Size = UDim2.new(0, 150, 1, -20)

    local TabList = Instance.new("ScrollingFrame")
    TabList.Name = "TabList"
    TabList.Parent = TabContainer
    TabList.BackgroundTransparency = 1
    TabList.Position = UDim2.new(0, 5, 0, 5)
    TabList.Size = UDim2.new(1, -10, 1, -10)
    TabList.ScrollBarThickness = 2
    TabList.ScrollBarImageColor3 = self.Settings.AccentColor
    TabList.CanvasSize = UDim2.new(0, 0, 0, 0)
    TabList.AutomaticCanvasSize = Enum.AutomaticSize.Y

    local TabListLayout = Instance.new("UIListLayout")
    TabListLayout.Parent = TabList
    TabListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabListLayout.Padding = UDim.new(0, 5)

    local Tabs = {}

    function Library:CreateTab(name)
        if Tabs[name] then
            warn("Tab with this name already exists!")
            return
        end

        local TabButton = Instance.new("TextButton")
        TabButton.Name = name.."Tab"
        TabButton.Parent = TabList
        TabButton.BackgroundColor3 = self.Settings.ButtonColor
        TabButton.Size = UDim2.new(1, 0, 0, 35)
        TabButton.Font = self.Settings.Font
        TabButton.TextColor3 = self.Settings.TextColor
        TabButton.TextSize = self.Settings.TextSize
        TabButton.AutoButtonColor = false

        local TabPage = Instance.new("Frame")
        TabPage.Name = name.."Page"
        TabPage.Parent = ContentHolder
        TabPage.BackgroundColor3 = self.Settings.MainColor
        TabPage.Size = UDim2.new(1, -20, 1, -20)
        TabPage.Position = UDim2.new(0, 10, 0, 10)
        TabPage.Visible = false

        TabButton.MouseButton1Click:Connect(function()
            for _, tab in pairs(Tabs) do
                tab.Page.Visible = false
                tab.Button.BackgroundColor3 = self.Settings.ButtonColor
            end
            TabPage.Visible = true
            TabButton.BackgroundColor3 = self.Settings.AccentColor
        end)

        Tabs[name] = {Button = TabButton, Page = TabPage}
    end

    function Library:CreateToggle(parent, text, default, callback)
        local ToggleFrame = Instance.new("Frame")
        ToggleFrame.Size = UDim2.new(1, 0, 0, 40)
        ToggleFrame.BackgroundColor3 = self.Settings.MainColor
        ToggleFrame.Parent = parent

        local ToggleButton = Instance.new("TextButton")
        ToggleButton.Size = UDim2.new(0, 40, 1, 0)
        ToggleButton.BackgroundColor3 = default and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        ToggleButton.Parent = ToggleFrame

        local Label = Instance.new("TextLabel")
        Label.Size = UDim2.new(1, -50, 1, 0)
        Label.Position = UDim2.new(0, 50, 0, 0)
        Label.BackgroundTransparency = 1
        Label.Text = text
        Label.TextColor3 = self.Settings.TextColor
        Label.Font = self.Settings.Font
        Label.TextSize = self.Settings.TextSize
        Label.Parent = ToggleFrame

        ToggleButton.MouseButton1Click:Connect(function()
            default = not default
            ToggleButton.BackgroundColor3 = default and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
            callback(default)
        end)

        return ToggleFrame
    end

    function Library:CreateDropdown(parent, text, options, callback)
        local DropdownFrame = Instance.new("Frame")
        DropdownFrame.Size = UDim2.new(1, 0, 0, 40)
        DropdownFrame.BackgroundColor3 = self.Settings.MainColor
        DropdownFrame.Parent = parent

        local DropdownLabel = Instance.new("TextLabel")
        DropdownLabel.Size = UDim2.new(1, -50, 1, 0)
        DropdownLabel.BackgroundTransparency = 1
        DropdownLabel.Text = text
        DropdownLabel.TextColor3 = self.Settings.TextColor
        DropdownLabel.Font = self.Settings.Font
        DropdownLabel.TextSize = self.Settings.TextSize
        DropdownLabel.Parent = DropdownFrame

        local DropdownButton = Instance.new("TextButton")
        DropdownButton.Size = UDim2.new(0, 40, 1, 0)
        DropdownButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
        DropdownButton.Position = UDim2.new(1, -40, 0, 0)
        DropdownButton.Text = "â–¼"
        DropdownButton.Parent = DropdownFrame

        local OptionsFrame = Instance.new("Frame")
        OptionsFrame.Size = UDim2.new(1, 0, 0, #options * 25)
        OptionsFrame.Position = UDim2.new(0, 0, 1, 0)
        OptionsFrame.BackgroundColor3 = self.Settings.MainColor
        OptionsFrame.Visible = false
        OptionsFrame.Parent = DropdownFrame

        for i, option in ipairs(options) do
            local OptionButton = Instance.new("TextButton")
            OptionButton.Size = UDim2.new(1, 0, 0, 25)
            OptionButton.BackgroundColor3 = self.Settings.ButtonColor
            OptionButton.Text = option
            OptionButton.TextColor3 = self.Settings.TextColor
            OptionButton.Font = self.Settings.Font
            OptionButton.TextSize = self.Settings.TextSize
            OptionButton.Parent = OptionsFrame

            OptionButton.MouseButton1Click:Connect(function()
                DropdownLabel.Text = option
                callback(option)
                OptionsFrame.Visible = false
            end)
        end

        DropdownButton.MouseButton1Click:Connect(function()
            OptionsFrame.Visible = not OptionsFrame.Visible
        end)

        return DropdownFrame
    end

    return Window
end

return Library
