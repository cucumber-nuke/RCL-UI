local Library = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")

Library.Settings = {
    MainColor = Color3.fromRGB(25, 25, 25),
    AccentColor = Color3.fromRGB(0, 170, 255),
    BackgroundColor = Color3.fromRGB(30, 30, 30),
    TextColor = Color3.fromRGB(255, 255, 255),
    ButtonColor = Color3.fromRGB(40, 40, 40),
    ButtonHoverColor = Color3.fromRGB(50, 50, 50),
    TabColor = Color3.fromRGB(35, 35, 35),
    TabSelectedColor = Color3.fromRGB(45, 45, 45),
    GlowColor = Color3.fromRGB(0, 170, 255),
    Font = Enum.Font.GothamBold,
    TextSize = 14,
    EasingStyle = Enum.EasingStyle.Quart,
    AnimationDuration = 0.5,
    
    Themes = {
        Default = {
            MainColor = Color3.fromRGB(25, 25, 25),
            AccentColor = Color3.fromRGB(0, 170, 255),
        },
        LightRed = {
            MainColor = Color3.fromRGB(255, 200, 200),
            AccentColor = Color3.fromRGB(255, 100, 100),
        },
        LightYellow = {
            MainColor = Color3.fromRGB(255, 255, 200),
            AccentColor = Color3.fromRGB(255, 255, 100),
        },
        LightGreen = {
            MainColor = Color3.fromRGB(200, 255, 200),
            AccentColor = Color3.fromRGB(100, 255, 100),
        },
        White = {
            MainColor = Color3.fromRGB(255, 255, 255),
            AccentColor = Color3.fromRGB(200, 200, 200),
        },
        Rainbow = {
            IsRainbow = true
        }
    }
}

local function CreateParticles(parent, position)
    local particles = {}
    for i = 1, 30 do
        local particle = Instance.new("Frame")
        particle.Size = UDim2.new(0, math.random(2, 5), 0, math.random(2, 5))
        particle.BackgroundColor3 = Library.Settings.AccentColor
        particle.Position = position
        particle.BorderSizePixel = 0
        particle.Parent = parent
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(1, 0)
        corner.Parent = particle
        
        particles[i] = particle
    end
    return particles
end

function Library:CreateWindow(title)
    local Window = {}
    Window.Tabs = {}
    Window.Toggles = {}
    Window.Tasks = {}
    Window.NotificationsEnabled = true
    Window.NotificationList = {}
    
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = title
    ScreenGui.Parent = CoreGui
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    Window.ScreenGui = ScreenGui
    
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Parent = ScreenGui
    MainFrame.BackgroundColor3 = Library.Settings.MainColor
    MainFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
    MainFrame.Size = UDim2.new(0, 600, 0, 400)
    MainFrame.ClipsDescendants = true
    Window.MainFrame = MainFrame
    
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 6)
    Corner.Parent = MainFrame
    
    local TitleBar = Instance.new("Frame")
    TitleBar.Name = "TitleBar"
    TitleBar.Parent = MainFrame
    TitleBar.BackgroundColor3 = Library.Settings.BackgroundColor
    TitleBar.Size = UDim2.new(1, 0, 0, 30)
    
    local TitleCorner = Instance.new("UICorner")
    TitleCorner.CornerRadius = UDim.new(0, 6)
    TitleCorner.Parent = TitleBar
    
    local TitleText = Instance.new("TextLabel")
    TitleText.Parent = TitleBar
    TitleText.BackgroundTransparency = 1
    TitleText.Position = UDim2.new(0, 10, 0, 0)
    TitleText.Size = UDim2.new(1, -50, 1, 0)
    TitleText.Font = Library.Settings.Font
    TitleText.Text = title
    TitleText.TextColor3 = Library.Settings.TextColor
    TitleText.TextSize = 14
    TitleText.TextXAlignment = Enum.TextXAlignment.Left
    
    local MinimizeButton = Instance.new("TextButton")
    MinimizeButton.Parent = TitleBar
    MinimizeButton.BackgroundTransparency = 1
    MinimizeButton.Position = UDim2.new(1, -50, 0, 0)
    MinimizeButton.Size = UDim2.new(0, 25, 1, 0)
    MinimizeButton.Font = Library.Settings.Font
    MinimizeButton.Text = "-"
    MinimizeButton.TextColor3 = Library.Settings.TextColor
    MinimizeButton.TextSize = 20
    
    local CloseButton = Instance.new("TextButton")
    CloseButton.Parent = TitleBar
    CloseButton.BackgroundTransparency = 1
    CloseButton.Position = UDim2.new(1, -25, 0, 0)
    CloseButton.Size = UDim2.new(0, 25, 1, 0)
    CloseButton.Font = Library.Settings.Font
    CloseButton.Text = "X"
    CloseButton.TextColor3 = Library.Settings.TextColor
    CloseButton.TextSize = 14
    
    local TabContainer = Instance.new("Frame")
    TabContainer.Name = "TabContainer"
    TabContainer.Parent = MainFrame
    TabContainer.BackgroundColor3 = Library.Settings.TabColor
    TabContainer.Position = UDim2.new(0, 10, 0, 40)
    TabContainer.Size = UDim2.new(0, 150, 1, -50)
    
    local TabCorner = Instance.new("UICorner")
    TabCorner.CornerRadius = UDim.new(0, 6)
    TabCorner.Parent = TabContainer
    
    local TabList = Instance.new("ScrollingFrame")
    TabList.Name = "TabList"
    TabList.Parent = TabContainer
    TabList.BackgroundTransparency = 1
    TabList.Position = UDim2.new(0, 5, 0, 5)
    TabList.Size = UDim2.new(1, -10, 1, -10)
    TabList.ScrollBarThickness = 2
    TabList.ScrollBarImageColor3 = Library.Settings.AccentColor
    
    local TabListLayout = Instance.new("UIListLayout")
    TabListLayout.Parent = TabList
    TabListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabListLayout.Padding = UDim.new(0, 5)
    
    local ContentFrame = Instance.new("Frame")
    ContentFrame.Name = "ContentFrame"
    ContentFrame.Parent = MainFrame
    ContentFrame.BackgroundColor3 = Library.Settings.BackgroundColor
    ContentFrame.Position = UDim2.new(0, 170, 0, 40)
    ContentFrame.Size = UDim2.new(1, -180, 1, -50)
    
    local ContentCorner = Instance.new("UICorner")
    ContentCorner.CornerRadius = UDim.new(0, 6)
    ContentCorner.Parent = ContentFrame
    
    local dragging
    local dragInput
    local dragStart
    local startPos
    
    TitleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
        end
    end)
    
    TitleBar.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    RunService.RenderStepped:Connect(function()
        if dragging and dragInput then
            local delta = dragInput.Position - dragStart
            MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    MinimizeButton.MouseButton1Click:Connect(function()
        local minimized = MainFrame.Size.Y.Offset <= 30
        local originalSize = UDim2.new(0, 600, 0, 400)
        local horizontalMinimized = UDim2.new(0, 150, 0, 400)
        local fullyMinimized = UDim2.new(0, 150, 0, 30)
        
        if minimized then
            TweenService:Create(MainFrame, 
                TweenInfo.new(0.3, Enum.EasingStyle.Quart), 
                {Size = horizontalMinimized}
            ):Play()
            wait(0.3)
            
            TweenService:Create(MainFrame, 
                TweenInfo.new(0.3, Enum.EasingStyle.Quart), 
                {Size = originalSize}
            ):Play()
            
            wait(0.3)
            TabContainer.Visible = true
            ContentFrame.Visible = true
            TweenService:Create(TabContainer, 
                TweenInfo.new(0.2), 
                {BackgroundTransparency = 0}
            ):Play()
            TweenService:Create(ContentFrame, 
                TweenInfo.new(0.2), 
                {BackgroundTransparency = 0}
            ):Play()
        else
            TweenService:Create(TabContainer, 
                TweenInfo.new(0.2), 
                {BackgroundTransparency = 1}
            ):Play()
            TweenService:Create(ContentFrame, 
                TweenInfo.new(0.2), 
                {BackgroundTransparency = 1}
            ):Play()
            wait(0.2)
            TabContainer.Visible = false
            ContentFrame.Visible = false
            
            TweenService:Create(MainFrame, 
                TweenInfo.new(0.3, Enum.EasingStyle.Quart), 
                {Size = horizontalMinimized}
            ):Play()
            wait(0.3)
            
            TweenService:Create(MainFrame, 
                TweenInfo.new(0.3, Enum.EasingStyle.Quart), 
                {Size = fullyMinimized}
            ):Play()
        end
    end)
    
    CloseButton.MouseButton1Click:Connect(function()
        local particles = CreateParticles(MainFrame, UDim2.new(0.5, 0, 0.5, 0))
        for _, particle in ipairs(particles) do
            local angle = math.random() * math.pi * 2
            local speed = math.random(300, 500)
            local dx = math.cos(angle) * speed
            local dy = math.sin(angle) * speed
            
            local startPos = particle.Position
            local targetPos = UDim2.new(
                startPos.X.Scale + (dx / MainFrame.AbsoluteSize.X),
                startPos.X.Offset,
                startPos.Y.Scale + (dy / MainFrame.AbsoluteSize.Y),
                startPos.Y.Offset
            )
            
            TweenService:Create(particle, 
                TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
                {
                    Position = targetPos,
                    BackgroundTransparency = 1,
                    Size = UDim2.new(0, 0, 0, 0)
                }
            ):Play()
        end
        
        TweenService:Create(MainFrame, 
            TweenInfo.new(0.5, Enum.EasingStyle.Quad), 
            {
                BackgroundTransparency = 1,
                Size = UDim2.new(0, 0, 0, 0),
                Position = UDim2.new(0.5, 0, 0.5, 0)
            }
        ):Play()
        
        for _, toggle in pairs(Window.Toggles) do
            if toggle.Value then
                toggle.Value = false
            end
        end
        
        for _, task in pairs(Window.Tasks) do
            if typeof(task) == "RBXScriptConnection" then
                task:Disconnect()
            end
        end
        
        wait(0.5)
        ScreenGui:Destroy()
    end)
    
    function Window:CreateTab(name)
        local Tab = {}
        
        local TabButton = Instance.new("TextButton")
        TabButton.Name = name.."Tab"
        TabButton.Parent = TabList
        TabButton.BackgroundColor3 = Library.Settings.TabColor
        TabButton.Size = UDim2.new(1, 0, 0, 30)
        TabButton.Font = Library.Settings.Font
        TabButton.Text = name
        TabButton.TextColor3 = Library.Settings.TextColor
        TabButton.TextSize = Library.Settings.TextSize
        TabButton.AutoButtonColor = false
        
        local TabButtonCorner = Instance.new("UICorner")
        TabButtonCorner.CornerRadius = UDim.new(0, 4)
        TabButtonCorner.Parent = TabButton
        
        local TabPage = Instance.new("ScrollingFrame")
        TabPage.Name = name.."Page"
        TabPage.Parent = ContentFrame
        TabPage.BackgroundTransparency = 1
        TabPage.Size = UDim2.new(1, -20, 1, -20)
        TabPage.Position = UDim2.new(0, 10, 0, 10)
        TabPage.ScrollBarThickness = 2
        TabPage.ScrollBarImageColor3 = Library.Settings.AccentColor
        TabPage.Visible = false
        
        local TabPageLayout = Instance.new("UIListLayout")
        TabPageLayout.Parent = TabPage
        TabPageLayout.SortOrder = Enum.SortOrder.LayoutOrder
        TabPageLayout.Padding = UDim.new(0, 5)
        
        TabButton.MouseButton1Click:Connect(function()
            for _, tab in pairs(Window.Tabs) do
                tab.Button.BackgroundColor3 = Library.Settings.TabColor
                tab.Page.Visible = false
            end
            TabButton.BackgroundColor3 = Library.Settings.TabSelectedColor
            TabPage.Visible = true
        end)
        
        Tab.Button = TabButton
        Tab.Page = TabPage
        table.insert(Window.Tabs, Tab)
        
        if #Window.Tabs == 1 then
            TabButton.BackgroundColor3 = Library.Settings.TabSelectedColor
            TabPage.Visible = true
        end
        
        function Tab:CreateButton(text, callback)
            local Button = Instance.new("TextButton")
            Button.Parent = TabPage
            Button.BackgroundColor3 = Library.Settings.ButtonColor
            Button.Size = UDim2.new(1, 0, 0, 30)
            Button.Font = Library.Settings.Font
            Button.Text = text
            Button.TextColor3 = Library.Settings.TextColor
            Button.TextSize = Library.Settings.TextSize
            Button.AutoButtonColor = false
            
            local ButtonCorner = Instance.new("UICorner")
            ButtonCorner.CornerRadius = UDim.new(0, 4)
            ButtonCorner.Parent = Button
            
            Button.MouseEnter:Connect(function()
                TweenService:Create(Button, TweenInfo.new(0.3), {
                    BackgroundColor3 = Library.Settings.ButtonHoverColor
                }):Play()
            end)
            
            Button.MouseLeave:Connect(function()
                TweenService:Create(Button, TweenInfo.new(0.3), {
                    BackgroundColor3 = Library.Settings.ButtonColor
                }):Play()
            end)
            
            Button.MouseButton1Click:Connect(callback)
            
            return Button
        end
        
        function Tab:CreateToggle(text, callback)
            local Toggle = {}
            Toggle.Value = false
            
            local ToggleButton = Tab:CreateButton(text, function()
                Toggle.Value = not Toggle.Value
                if Toggle.Value then
                    TweenService:Create(ToggleButton, TweenInfo.new(0.3), {
                        BackgroundColor3 = Library.Settings.AccentColor
                    }):Play()
                else
                    TweenService:Create(ToggleButton, TweenInfo.new(0.3), {
                        BackgroundColor3 = Library.Settings.ButtonColor
                    }):Play()
                end
                callback(Toggle.Value)
            end)
            
            Toggle.Instance = ToggleButton
            table.insert(Window.Toggles, Toggle)
            
            return Toggle
        end
        
        function Tab:CreateDropdown(text, options, callback)
            local Dropdown = {}
            Dropdown.Value = options[1]
            
            local DropdownButton = Instance.new("TextButton")
            DropdownButton.Parent = TabPage
            DropdownButton.BackgroundColor3 = Library.Settings.ButtonColor
            DropdownButton.Size = UDim2.new(1, 0, 0, 30)
            DropdownButton.Font = Library.Settings.Font
            DropdownButton.Text = text .. ": " .. Dropdown.Value
            DropdownButton.TextColor3 = Library.Settings.TextColor
            DropdownButton.TextSize = Library.Settings.TextSize
            
            local DropdownCorner = Instance.new("UICorner")
            DropdownCorner.CornerRadius = UDim.new(0, 4)
            DropdownCorner.Parent = DropdownButton
            
            local DropdownContainer = Instance.new("Frame")
            DropdownContainer.Name = "DropdownContainer"
            DropdownContainer.Parent = TabPage
            DropdownContainer.BackgroundTransparency = 1
            DropdownContainer.Size = UDim2.new(1, 0, 0, 0)
            DropdownContainer.ClipsDescendants = true
            
            local OptionsList = Instance.new("Frame")
            OptionsList.Parent = DropdownContainer
            OptionsList.BackgroundColor3 = Library.Settings.ButtonColor
            OptionsList.Size = UDim2.new(1, 0, 0, #options * 25)
            OptionsList.Position = UDim2.new(0, 0, 0, 0)
            OptionsList.ZIndex = 10
            
            local OptionsListCorner = Instance.new("UICorner")
            OptionsListCorner.CornerRadius = UDim.new(0, 4)
            OptionsListCorner.Parent = OptionsList
            
            for i, option in ipairs(options) do
                local OptionButton = Instance.new("TextButton")
                OptionButton.Parent = OptionsList
                OptionButton.BackgroundColor3 = Library.Settings.ButtonColor
                OptionButton.Size = UDim2.new(1, 0, 0, 25)
                OptionButton.Position = UDim2.new(0, 0, 0, (i-1) * 25)
                OptionButton.Font = Library.Settings.Font
                OptionButton.Text = option
                OptionButton.TextColor3 = Library.Settings.TextColor
                OptionButton.TextSize = Library.Settings.TextSize
                OptionButton.ZIndex = 10
                
                local OptionCorner = Instance.new("UICorner")
                OptionCorner.CornerRadius = UDim.new(0, 4)
                OptionCorner.Parent = OptionButton
                
                OptionButton.MouseEnter:Connect(function()
                    TweenService:Create(OptionButton, TweenInfo.new(0.3), {
                        BackgroundColor3 = Library.Settings.ButtonHoverColor
                    }):Play()
                end)
                
                OptionButton.MouseLeave:Connect(function()
                    TweenService:Create(OptionButton, TweenInfo.new(0.3), {
                        BackgroundColor3 = Library.Settings.ButtonColor
                    }):Play()
                end)
                
                OptionButton.MouseButton1Click:Connect(function()
                    Dropdown.Value = option
                    DropdownButton.Text = text .. ": " .. option
                    
                    TweenService:Create(DropdownContainer, TweenInfo.new(0.3), {
                        Size = UDim2.new(1, 0, 0, 0)
                    }):Play()
                    
                    if callback then callback(option) end
                end)
            end
            
            local isOpen = false
            
            DropdownButton.MouseButton1Click:Connect(function()
                isOpen = not isOpen
                
                TweenService:Create(DropdownContainer, TweenInfo.new(0.3), {
                    Size = UDim2.new(1, 0, 0, isOpen and (#options * 25) or 0)
                }):Play()
            end)
            
            return Dropdown
        end
        
        return Tab
    end
    
    function Window:CreateNotification(title, text, duration)
        if not Window.NotificationsEnabled then return end
        
        duration = duration or 3
        local Notification = Instance.new("Frame")
        Notification.Parent = ScreenGui
        Notification.BackgroundColor3 = Library.Settings.MainColor
        Notification.Position = UDim2.new(1, -250, 1, -70)
        Notification.Size = UDim2.new(0, 230, 0, 60)
        Notification.ZIndex = 100
        
        local NotifCorner = Instance.new("UICorner")
        NotifCorner.CornerRadius = UDim.new(0, 4)
        NotifCorner.Parent = Notification
        
        local NotifTitle = Instance.new("TextLabel")
        NotifTitle.Parent = Notification
        NotifTitle.BackgroundTransparency = 1
        NotifTitle.Position = UDim2.new(0, 10, 0, 5)
        NotifTitle.Size = UDim2.new(1, -20, 0, 20)
        NotifTitle.Font = Library.Settings.Font
        NotifTitle.Text = title
        NotifTitle.TextColor3 = Library.Settings.AccentColor
        NotifTitle.TextSize = 14
        NotifTitle.ZIndex = 101
        
        local NotifText = Instance.new("TextLabel")
        NotifText.Parent = Notification
        NotifText.BackgroundTransparency = 1
        NotifText.Position = UDim2.new(0, 10, 0, 25)
        NotifText.Size = UDim2.new(1, -20, 0, 30)
        NotifText.Font = Library.Settings.Font
        NotifText.Text = text
        NotifText.TextColor3 = Library.Settings.TextColor
        NotifText.TextSize = 12
        NotifText.ZIndex = 101
        
        local offset = 0
        for i, notif in ipairs(Window.NotificationList) do
            if notif and notif.Parent then
                offset = offset + 70
            end
        end
        
        table.insert(Window.NotificationList, Notification)
        
        TweenService:Create(Notification, 
            TweenInfo.new(0.5, Enum.EasingStyle.Quart), 
            {Position = UDim2.new(1, -260, 1, -70 - offset)}
        ):Play()
        
        task.spawn(function()
            wait(duration)
            
            local notifIndex = table.find(Window.NotificationList, Notification)
            if notifIndex then
                table.remove(Window.NotificationList, notifIndex)
                
                for i = notifIndex, #Window.NotificationList do
                    local notif = Window.NotificationList[i]
                    if notif and notif.Parent then
                        TweenService:Create(notif,
                            TweenInfo.new(0.5, Enum.EasingStyle.Quart),
                            {Position = UDim2.new(1, -260, 1, -70 - (70 * (i-1)))}
                        ):Play()
                    end
                end
            end
            
            TweenService:Create(Notification, 
                TweenInfo.new(0.5, Enum.EasingStyle.Quart), 
                {Position = UDim2.new(1, 0, Notification.Position.Y.Scale, Notification.Position.Y.Offset)}
            ):Play()
            
            wait(0.5)
            Notification:Destroy()
        end)
    end
    
    function Window:CreateUserInfo()
        local UserInfoPanel = Instance.new("Frame")
        UserInfoPanel.Name = "UserInfoPanel"
        UserInfoPanel.Parent = MainFrame
        UserInfoPanel.BackgroundColor3 = Library.Settings.BackgroundColor
        UserInfoPanel.Position = UDim2.new(0, 10, 1, -80)
        UserInfoPanel.Size = UDim2.new(0, 150, 0, 70)
        UserInfoPanel.Visible = true
        
        local UserInfoCorner = Instance.new("UICorner")
        UserInfoCorner.CornerRadius = UDim.new(0, 4)
        UserInfoCorner.Parent = UserInfoPanel
        
        local Username = Instance.new("TextLabel")
        Username.Parent = UserInfoPanel
        Username.BackgroundTransparency = 1
        Username.Position = UDim2.new(0, 10, 0, 5)
        Username.Size = UDim2.new(1, -20, 0, 20)
        Username.Font = Library.Settings.Font
        Username.Text = "User: " .. Players.LocalPlayer.Name
        Username.TextColor3 = Library.Settings.TextColor
        Username.TextSize = 12
        
        local UserId = Instance.new("TextLabel")
        UserId.Parent = UserInfoPanel
        UserId.BackgroundTransparency = 1
        UserId.Position = UDim2.new(0, 10, 0, 25)
        UserId.Size = UDim2.new(1, -20, 0, 20)
        UserId.Font = Library.Settings.Font
        UserId.Text = "ID: " .. Players.LocalPlayer.UserId
        UserId.TextColor3 = Library.Settings.TextColor
        UserId.TextSize = 12
        
        local GameTime = Instance.new("TextLabel")
        GameTime.Parent = UserInfoPanel
        GameTime.BackgroundTransparency = 1
        GameTime.Position = UDim2.new(0, 10, 0, 45)
        GameTime.Size = UDim2.new(1, -20, 0, 20)
        GameTime.Font = Library.Settings.Font
        GameTime.Text = "Time: 00:00:00"
        GameTime.TextColor3 = Library.Settings.TextColor
        GameTime.TextSize = 12
        
        local startTime = tick()
        RunService.RenderStepped:Connect(function()
            local elapsed = tick() - startTime
            local hours = math.floor(elapsed/3600)
            local minutes = math.floor((elapsed%3600)/60)
            local seconds = math.floor(elapsed%60)
            GameTime.Text = string.format("Time: %02d:%02d:%02d", hours, minutes, seconds)
        end)
        
        return UserInfoPanel
    end
    
    function Window:ApplyTheme(theme)
        if theme.IsRainbow then
            local function updateRainbow()
                local hue = tick() % 5 / 5
                local color = Color3.fromHSV(hue, 1, 1)
                MainFrame.BackgroundColor3 = color
            end
            
            RunService.RenderStepped:Connect(updateRainbow)
        else
            MainFrame.BackgroundColor3 = theme.MainColor
        end
    end
    
    return Window
end

return Library
